---
let states = [
    {
        id: 1,
        state: "Alabama",
    },
    {
        id: 2,
        state: "Alaska",
    },
    {
        id: 3,
        state: "Arizona",
    },
    {
        id: 4,
        state: "Arkansas",
    },
    {
        id: 5,
        state: "California",
    },
    {
        id: 6,
        state: "Colorado",
    },
    {
        id: 7,
        state: "Connecticut",
    },
    {
        id: 8,
        state: "Delaware",
    },
    {
        id: 9,
        state: "Florida",
    },
    {
        id: 10,
        state: "Georgia",
    },
    {
        id: 11,
        state: "Hawaii",
    },
    {
        id: 12,
        state: "Idaho",
    },
    {
        id: 13,
        state: "Illinois",
    },
    {
        id: 14,
        state: "Indiana",
    },
    {
        id: 15,
        state: "Iowa",
    },
    {
        id: 16,
        state: "Kansas",
    },
    {
        id: 17,
        state: "Kentucky",
    },
    {
        id: 18,
        state: "Louisiana",
    },
    {
        id: 19,
        state: "Maine",
    },
    {
        id: 20,
        state: "Maryland",
    },
    {
        id: 21,
        state: "Massachusetts",
    },
    {
        id: 22,
        state: "Michigan",
    },
    {
        id: 23,
        state: "Minnesota",
    },
    {
        id: 24,
        state: "Mississippi",
    },
    {
        id: 25,
        state: "Missouri",
    },
    {
        id: 26,
        state: "Montana",
    },
    {
        id: 27,
        state: "Nebraska",
    },
    {
        id: 28,
        state: "Nevada",
    },
    {
        id: 29,
        state: "New Hampshire",
    },
    {
        id: 30,
        state: "New Jersey",
    },
    {
        id: 31,
        state: "New Mexico",
    },
    {
        id: 32,
        state: "New York",
    },
    {
        id: 33,
        state: "North Carolina",
    },
    {
        id: 34,
        state: "North Dakota",
    },
    {
        id: 35,
        state: "Ohio",
    },
    {
        id: 36,
        state: "Oklahoma",
    },
    {
        id: 37,
        state: "Oregon",
    },
    {
        id: 38,
        state: "Pennsylvania",
    },
    {
        id: 39,
        state: "Rhode Island",
    },
    {
        id: 40,
        state: "South Carolina",
    },
    {
        id: 41,
        state: "South Dakota",
    },
    {
        id: 42,
        state: "Tennessee",
    },
    {
        id: 43,
        state: "Texas",
    },
    {
        id: 44,
        state: "Utah",
    },
    {
        id: 45,
        state: "Vermont",
    },
    {
        id: 46,
        state: "Virginia",
    },
    {
        id: 47,
        state: "Washington",
    },
    {
        id: 48,
        state: "West Virginia",
    },
    {
        id: 49,
        state: "Wisconsin",
    },
    {
        id: 50,
        state: "Wyoming",
    },
];

let countries = [];
try {
    const response = await fetch("https://restcountries.com/v3.1/all");
    const data = await response.json();
    countries = data.sort((a, b) => a.name.common.localeCompare(b.name.common));
} catch (error) {
    // Fallback to a basic list of common countries if API fails
    countries = [
        { name: { common: "Canada" } },
        { name: { common: "Mexico" } },
        { name: { common: "United Kingdom" } },
        { name: { common: "France" } },
        { name: { common: "Germany" } },
        { name: { common: "Italy" } },
        { name: { common: "Spain" } },
        { name: { common: "Australia" } },
        { name: { common: "Japan" } },
        { name: { common: "China" } },
        { name: { common: "Brazil" } },
        { name: { common: "India" } },
    ];
}

import { Image } from "astro:assets";
import star from "@assets/icons/star.svg";
---

<form
    id="contact-form"
    class="w-full text-sm font-medium"
    action="/api/contact"
    method="POST"
>
    <div class="mb-4 flex flex-col">
        <label for="fullName" class="mb-2 pl-3 text-sm">Full Name: </label>
        <input
            id="fullName"
            required
            type="text"
            placeholder="John Smith"
            class="rounded-full h-12 px-3 border-1 border-gray-1 focus:border-2 focus:border-indigo"
            name="Full Name"
        />
    </div>
    <div class="mb-4 flex flex-col">
        <label for="fullName" class="mb-2 pl-3 text-sm">Email:</label>
        <input
            type="email"
            placeholder="example@email.com"
            required
            name="Email"
            id="email"
            class="rounded-full h-12 px-3 border-1 border-gray-1 focus:border-2 focus:border-indigo"
        />
    </div>

    <fieldset class="flex flex-col">
        <legend class="mb-2 text-sm pl-3 hidden">Address: </legend>

        <div class="mb-4 flex flex-col">
            <label for="location" class="mb-2 pl-3 text-sm">Location:</label>
            <select
                id="location"
                name="location"
                class="rounded-full h-12 px-3 border-1 border-gray-1 focus:border-2 focus:border-indigo"
                required
            >
                <option value="-1">Select Country</option>
                <option value="usa">USA</option>
                <option value="international">International</option>
            </select>
        </div>
        {/*USA Options */}
        <div id="usa div" class="hidden">
            <div class="w-full flex flex-col mb-4">
                <label class="mb-2 pl-3 text-sm" for="state">State</label>

                <select
                    name="State"
                    class="rounded-full h-12 px-3 border-1 border-gray-1 focus:border-2 focus:border-indigo"
                >
                    <option value="-1">Select State</option>
                    {
                        states.map((state) => {
                            return (
                                <option value={state.state}>
                                    {state.state}
                                </option>
                            );
                        })
                    }
                    <option value="Other">Other</option></select
                >
            </div>
        </div>

        {/*International Options */}
        <div id="international div" class="hidden">
            <div class="w-full flex flex-col mb-4">
                <label class="mb-2 pl-3 text-sm" for="country">Country</label>

                <select
                    id="country"
                    name="Country"
                    class="rounded-full h-12 px-3 border-1 border-gray-1 focus:border-2 focus:border-indigo"
                >
                    <option value="-1">Select Country</option>
                    {
                        countries.map((country) => {
                            return (
                                <option value={country.name.common}>
                                    {country.name.common}
                                </option>
                            );
                        })
                    }
                    <option value="Other">Other</option></select
                >
            </div>
        </div>
    </fieldset>
    <div class="w-full flex flex-col mb-4">
        <label class="mb-2 pl-3 text-sm" for="Inquiry Type">Inquiry Type</label>

        <select
            id="Inquiry Type"
            name="Inquiry Type"
            class="rounded-full h-12 px-3 border-1 border-gray-1 focus:border-2 focus:border-indigo"
        >
            <option value="-1">Select one...</option>
            <option value="General Inquiry">General Inquiry</option>
            <option value="Audition Information"> Audition Information</option>
            <option value="Registration Details"> Registration Details</option>
            <option value="Other">Other</option></select
        >
    </div>

    <div class="mb-4 flex flex-col">
        <label for="message" class="mb-2 pl-3 text-sm">Your message:</label>
        <textarea
            name="message"
            id="message"
            placeholder="I'm interested in..."
            class="rounded-3xl h-40 py-3 px-3 border-1 border-gray-1 focus:border-2 focus:border-indigo"
        ></textarea>
    </div>

    <button
        type="submit"
        class:list={[
            "relative overflow-hidden mt-6  group button font-body font-semibold capitalize inline-flex bg-dark-1 text-white hover:text-dark-1",
        ]}
    >
        <span class:list={["button-decor bg-yellow"]}></span>
        <div class="button-content">
            <div class:list={[" py-2.5 bg-yellow px-3"]}>
                <div
                    class:list={[
                        " h-6 w-6 bg-dark-1 relative group-hover:rotate-90 transition-transform duration-300 rounded-full",
                    ]}
                >
                    <Image
                        src={star}
                        alt="star-icon"
                        class="w-4 h-4 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2"
                    />
                </div>
            </div>
            <div class="flex justify-center items-center">
                <span class="button__text">Submit Form</span>
            </div>
        </div>
    </button>
</form>

<script>
    const form = document.querySelector("#contact-form") as HTMLFormElement;
    const countrySelector = document.getElementById("location");
    const sourceSelector = document.getElementById("source");
    if (countrySelector) {
        countrySelector.addEventListener("change", showCountryChoise);
    }

    if (sourceSelector) {
        sourceSelector.addEventListener("change", showSourceChoise);
    }

    function showCountryChoise(e) {
        switch (e.target.value) {
            case "usa":
                document.getElementById("usa div").classList.remove("hidden");
                document
                    .getElementById("international div")
                    .classList.add("hidden");

                break;
            case "international":
                document
                    .getElementById("international div")
                    .classList.remove("hidden");
                document.getElementById("usa div").classList.add("hidden");

                break;
            default:
                break;
        }
    }

    function showSourceChoise(e) {
        if (e.target.value === "Other") {
            document.getElementById("otherText").classList.remove("hidden");
        } else {
            document.getElementById("otherText").classList.add("hidden");
        }
    }

    // Add form submission handler
    if (form) {
        form.addEventListener("submit", async function (e) {
            e.preventDefault();
            console.log("Form submission started");

            try {
                const formData = new FormData(form);
                console.log("FormData created", [...formData.entries()]);

                const response = await fetch("/api/contact", {
                    method: "POST",
                    body: formData,
                });

                console.log(
                    "Response received:",
                    response.status,
                    response.statusText,
                );

                if (response.ok) {
                    console.log("Redirecting to thank-you page");
                    form.reset();
                    window.location.href = "/thank-you";
                } else {
                    try {
                        const data = await response.json();
                        console.error("Error response:", data);
                        alert(
                            data.message ||
                                "Failed to send email. Please try again.",
                        );
                    } catch (jsonError) {
                        console.error("Error parsing response:", jsonError);
                        alert(
                            `Server error (${response.status}). Please try again later.`,
                        );
                    }
                }
            } catch (error) {
                console.error("Error submitting form:", error);
                alert("An error occurred. Please try again later.");
            }
        });
    }
</script>

<style>
    /* From Uiverse.io by Creatlydev */
    .button {
        text-decoration: none;
        line-height: 1;
        border-radius: 1.5rem;
        overflow: hidden;
        position: relative;

        border: none;
        cursor: pointer;
    }

    .button-decor {
        position: absolute;
        inset: 0;

        transform: translateX(-85%);
        transition: transform 0.3s;
        z-index: 0;
    }

    .button-content {
        display: flex;
        align-items: center;
        font-weight: 600;
        position: relative;
        overflow: hidden;
    }

    .button__icon {
        width: 48px;
        height: 40px;
        background-color: var(--clr);
        display: grid;
        place-items: center;
    }

    .button__text {
        display: inline-block;
        transition: color 0.2s;
        padding: 2px 1.5rem 2px;
        padding-left: 0.75rem;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .button:hover .button-decor {
        transform: translate(0);
    }
</style>
