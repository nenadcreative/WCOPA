@import 'tailwindcss';

@plugin '@tailwindcss/typography';
@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --font-body: Dm Sans Variable, ui-sans-serif, system-ui, sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  --font-display: Poppins, ui-sans-serif, system-ui, sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';

  --text-xs: 0.875rem;
  --text-sm: 1rem;
  --text-md: 1.125rem;
  --text-lg: 1.25rem;
  --text-xl: 1.75rem;


  --text-display-xs: 1rem;
  --text-display-sm: 1.125rem;
  --text-display-md: 1.375rem;
  --text-display-lg: 2rem;
  --text-display-xl: 3rem;
  --text-display-2xl: 3.25rem;

  --color-dark-1: #050006;
  --color-dark-2: #240727;

  --color-offwhite: #f8f6f8;
  --color-indigo: #4e30c5;
  --color-purple: #743089;
  --color-yellow: #f4ca51;
  --color-lavander: #edeaf9;

  --color-gray-1: #828082;

  --list-style-image-star: url('/icons/star.svg');

  --radius-xs: 0.125rem;
  --radius-sm: calc(var(--radius) - 4px);
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);

  --spacing-3_5xl: 50rem;

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  --animate-in-custom: slide-in 0.2s ease-in-out;

  @keyframes slide-in {

    0%,
    100% {
      transform: translateX(100%);
    }

  }

  @keyframes accordion-down {
    from {
      height: 0;
    }

    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }

    to {
      height: 0;
    }
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {

  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  h1 {
    @apply text-display-lg sm:text-display-xl lg:text-display-2xl font-bold;
  }

  h2 {
    @apply will-change-auto opacity-0 text-display-lg lg:text-display-xl font-bold;
  }

  h3 {
    @apply text-display-md lg:text-display-lg font-bold;
  }

  :root {
    --radius: 0.5rem
  }


}

@layer utilities {
  html {
    scroll-behavior: smooth;
    @apply font-body;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h5 {
    @apply font-display leading-tight;
  }

  .scrolled {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(12px);
  }

  .button {
    text-decoration: none;
    line-height: 1;
    border-radius: 1.5rem;
    overflow: hidden;
    position: relative;

    border: none;
    cursor: pointer;
  }

  .button-decor {
    position: absolute;
    inset: 0;

    transform: translateX(-85%);
    transition: transform 0.3s;
    z-index: 0;
  }

  .button-content {
    display: flex;
    align-items: center;
    font-weight: 600;
    position: relative;
    overflow: hidden;
  }

  .button__icon {
    width: 48px;
    height: 40px;
    background-color: var(--clr);
    display: grid;
    place-items: center;
  }

  .button__text {
    display: inline-block;
    transition: color 0.2s;
    padding: 2px 1.5rem 2px;
    padding-left: 0.75rem;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }

  .button:hover .button-decor {
    transform: translate(0);
  }

  p {
    @apply opacity-0 will-change-auto
  }
}



@layer base {}